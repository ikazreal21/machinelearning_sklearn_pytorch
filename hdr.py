# -*- coding: utf-8 -*-
"""hdr.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11FHe_R6eH2-msonMG-8U2fCWoSK1vfh6
"""

# !pip install pillow numpy sklearn mnist

import mnist
from PIL import Image
import numpy as np
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import confusion_matrix
import joblib

X_train = mnist.train_images()
y_train = mnist.train_labels()
X_test = mnist.test_images()
y_test = mnist.test_labels()
X_train = X_train.reshape((-1, 28*28))
X_test = X_test.reshape((-1, 28*28))
X_train = (X_train/256)
X_test = (X_test/256)

clf = MLPClassifier(solver='adam', activation='relu',
                    hidden_layer_sizes=(64, 64))

clf.fit(X_train, y_train)

# # save
# filename = 'model.sav'
# joblib.dump(clf, filename)

prediction = clf.predict(X_test)

acc = confusion_matrix(y_test, prediction)


def accuracy(confusion_matrix):
    diagonal = confusion_matrix.trace()
    elements = confusion_matrix.sum()
    return diagonal/elements


print(accuracy(acc))

# insert image
img = Image.open('five2.png')
data = list(img.getdata())


for i in range(len(data)):
    data[i] = 255 - data[i]

pred = data
pred = np.array(pred)/256
p = clf.predict([pred])
print("Prediction: ", p)
